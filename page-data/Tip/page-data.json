{"componentChunkName":"component---src-templates-blog-template-js","path":"/Tip/","result":{"data":{"cur":{"id":"ac546b08-c0fa-5778-b848-be708ba2c37d","html":"<h2 id=\"-알파벳을-사용해야-하는-경우\" style=\"position:relative;\"><a href=\"#-%EC%95%8C%ED%8C%8C%EB%B2%B3%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\" 알파벳을 사용해야 하는 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔠 알파벳을 사용해야 하는 경우</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">26</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"-js에서-복사본-배열을-만들고-기존-배열을-유지하는-경우\" style=\"position:relative;\"><a href=\"#-js%EC%97%90%EC%84%9C-%EB%B3%B5%EC%82%AC%EB%B3%B8-%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EA%B8%B0%EC%A1%B4-%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%9C%A0%EC%A7%80%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\" js에서 복사본 배열을 만들고 기존 배열을 유지하는 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 JS에서 복사본 배열을 만들고 기존 배열을 유지하는 경우</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> basicSum <span class=\"token operator\">=</span> sumArr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sortSum <span class=\"token operator\">=</span> sumArr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> b <span class=\"token operator\">-</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"-시간초과가-발생할-것-같다면\" style=\"position:relative;\"><a href=\"#-%EC%8B%9C%EA%B0%84%EC%B4%88%EA%B3%BC%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%A0-%EA%B2%83-%EA%B0%99%EB%8B%A4%EB%A9%B4\" aria-label=\" 시간초과가 발생할 것 같다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⏰ 시간초과가 발생할 것 같다면…?</h2>\n<p>시간초과가 발생할 것 같다면 코드를 뜯어 고치기보다는 <code class=\"language-text\">SIMPLE</code>하게 생각하는 습관을 갖자.</p>\n<p><strong>특히 이중 반복문 또는 삼중 반복문을 사용해야하는 경우라면 <code class=\"language-text\">Map</code>을 사용하는건 어떨까?</strong></p>\n<p>정말 중요한 포인트이다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%95%8C%ED%8C%8C%EB%B2%B3%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\">🔠 알파벳을 사용해야 하는 경우</a></li>\n<li><a href=\"#-js%EC%97%90%EC%84%9C-%EB%B3%B5%EC%82%AC%EB%B3%B8-%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EA%B8%B0%EC%A1%B4-%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%9C%A0%EC%A7%80%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\">💡 JS에서 복사본 배열을 만들고 기존 배열을 유지하는 경우</a></li>\n<li><a href=\"#-%EC%8B%9C%EA%B0%84%EC%B4%88%EA%B3%BC%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%A0-%EA%B2%83-%EA%B0%99%EB%8B%A4%EB%A9%B4\">⏰ 시간초과가 발생할 것 같다면…?</a></li>\n</ul>\n</div>","excerpt":"🔠 알파벳을 사용해야 하는 경우 💡 JS에서 복사본 배열을 만들고 기존 배열을 유지하는 경우 ⏰ 시간초과가 발생할 것 같다면…? 시간초과가 발생할 것 같다면 코드를 뜯어 고치기보다는 하게 생각하는 습관을 갖자. 특히 이중 반복문 또는 삼중 반복문을 사용해야하는 경우라면 을 사용하는건 어떨까? 정말 중요한 포인트이다. 🔠 알파벳을 사용해야 하는 경우 💡 JS에서 복사본 배열을 만들고 기존 배열을 유지하는 경우 ⏰ 시간초과가 발생할 것 같다면…?","frontmatter":{"date":"March 14, 2024","title":"코딩테스트를 경험해보며 느낀 꿀팁","categories":"알고리즘","author":"재오","emoji":"💡"},"fields":{"slug":"/Tip/"}},"next":{"id":"9dfb7f52-6cf6-5c73-b06d-0ca0e4d612f3","html":"<h2 id=\"️-pccp란\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-pccp%EB%9E%80\" aria-label=\"️ pccp란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️ PCCP란?</h2>\n<p><code class=\"language-text\">PCCP</code>는 SW 전공자와 중상급 개발자를 위한 코딩테스트 시험으로, 취득 레벨을 기준으로 실제 기업에서 코딩테스트를 면제해주거나 우대를 해주는 혜택이 제공된다. 정규 시험 날짜는 매월 1번씩 있으므로, 부담없이 시간이 가능하다면 얼마든지 시험을 치룰 수 있다.</p>\n<p><img src=\"/ffd7144e2f8f8e62beac8753dd46be26/1.png\" alt=\"\"></p>\n<p>시험시간은 총 2시간이고 응시료는 40,000원이다. 생각보다 응시료가 부담이긴 한데 한번에 잘 따면 되겠지라는 생각으로 응시를 했다. 또한 발급받는 인증서의 유효기간은 2년이다.(2년 안에 취뽀…할 수 있겠지?)</p>\n<p>정말 다행이었던건 PCCP에서는 자바스크립트를 코딩테스트 언어로 채택해준다는 점이다. 많은 대기업 특히 삼성은 자바스크립트를 코딩테스트 언어로 인정해주지 않아서 속상했는데 정말 다행이라고 생각했다.</p>\n<h2 id=\"-지원-동기\" style=\"position:relative;\"><a href=\"#-%EC%A7%80%EC%9B%90-%EB%8F%99%EA%B8%B0\" aria-label=\" 지원 동기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👊 지원 동기</h2>\n<p>방학기간에 SW마에스트로를 준비하면서 코딩테스트 문제를 많이 풀었는데 결과가 생각보다 좋지 않아서 결과라도 남는 PCCP 인증서가 너무 필요했다. 다양한 기업들이 PCCP를 지원과정에서 인정을 해주기 때문에 자세한 내용은 아래 링크에서 확인하면 된다.</p>\n<p>👉 <a href=\"https://certi.programmers.co.kr/partners/enterprise-use-cases\">PCCP 기업 활용 현황</a></p>\n<p><img src=\"/5cd42d8f531e8ce5672dd491e85d5bf3/2.png\" alt=\"\"></p>\n<p>보통 금융권은 lv2 이상이면 혜택을 받을 수 있고, 쿠팡이나 요기요는 lv3 이상이면 된다. 오늘의 집은 lv4… 진짜 빡세다. 이번 정기 시험에서는 큰 욕심 없이(?) 쿠팡을 기준으로 하는 lv3을 목표로 하였다.</p>\n<h2 id=\"-시험-환경\" style=\"position:relative;\"><a href=\"#-%EC%8B%9C%ED%97%98-%ED%99%98%EA%B2%BD\" aria-label=\" 시험 환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧑🏻‍💻 시험 환경</h2>\n<p>지금까지 코딩테스트는 네이버 부스트캠프, 소프트웨어 마에스트로 2번이 전부였는데 모두 PCCP와 같은 환경인 프로그래머스 IDE에서 진행되었다. 하지만 이번 PCCP 시험이 꽤 철저하고 빡빡했다. 물도 반입이 안되고 시험시작 20분 전부터 입장을 하지 않으면 아예 시험을 응시할 수 없다. 시험 시작 20분 전부터는 화장실도 갈 수 없다.</p>\n<p>20분동안 무한 대기를 하는 것이 너무 시간 아깝다고 생각해서 내가 작성했던 기술 블로그를 읽어보며 주요 알고리즘을 정리하는 시간을 가졌는데 시험 감독관님으로부터 빨리 창 닫으라고 경고 메시지가 와서 10분 넘게 그냥 멍때리며 앉아있었다…</p>\n<h2 id=\"-문제-후기\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%ED%9B%84%EA%B8%B0\" aria-label=\" 문제 후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📄 문제 후기</h2>\n<p>불과 2주 전에 SW마에스트로 시험을 응시했는데 시험이 생각보다 정말 쉬웠다. 끝나고 하는 이야기지만 나는 알고리즘 문제 4문제 중에서 3문제를 풀었기 때문에 당연히 1차 코딩테스트는 합격 안정권이라고 자만했다가 떨어졌다. 그렇기 때문에 1문제, 1문제 풀 때마다 호들갑은 절대 떨지 말자고 되뇌이면서 시험에 응시했다. (이래서 경험이 중요하다고 하나보다.)</p>\n<p><em>문제의 보안때문에 구체적으로 말은 못하겠다.</em></p>\n<h3 id=\"1번-\" style=\"position:relative;\"><a href=\"#1%EB%B2%88-\" aria-label=\"1번  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1번 ✅</h3>\n<p>그냥 <code class=\"language-text\">수학</code> 문제였다. 문제 설명은 무척이나 길었던 것 같은데 해야하는 일은 명확했던 문제이다. 체감 난이도는 백준 기준 <code class=\"language-text\">브론즈 3</code>정도이다. 이 문제는 사실 할 말이 없다.</p>\n<h3 id=\"2번-\" style=\"position:relative;\"><a href=\"#2%EB%B2%88-\" aria-label=\"2번  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2번 ✅</h3>\n<p>2번 문제부터 난이도가 확 체감됐다. 문제 설명 자체도 어렵게 느껴졌고 고민해야하는 예외 처리 양도 급격하게 증가했다. <code class=\"language-text\">문자열</code>, <code class=\"language-text\">해쉬</code> 문제였다. 문제를 정확하게 이해 못하고 <code class=\"language-text\">BFS</code> 사용했으면 아마 못풀었을 것 같다. 체감 난이도는 백준 기준 <code class=\"language-text\">실버1 ~ 골드5</code>정도이다.</p>\n<h3 id=\"3번-\" style=\"position:relative;\"><a href=\"#3%EB%B2%88-\" aria-label=\"3번  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3번 ❌</h3>\n<p>시험이 끝난 지금도 이 문제의 유형이 <code class=\"language-text\">DP</code>인지 아닌지 모르겠다. 문제 자체는 매우 흥미로웠는데 이걸 코드로 어떻게 구현하지…? 생각해야할 게 너무 많은데? 이 생각만 하다가 끝났다. 체감 난이도는 백준 기준 <code class=\"language-text\">골드 2 ~ 골드 1</code>였다. 내 약점이 어떤 부분인지 확 체감되었던 문제였다.</p>\n<h3 id=\"4번-\" style=\"position:relative;\"><a href=\"#4%EB%B2%88-\" aria-label=\"4번  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4번 ✅</h3>\n<p>2번이 생각보다 어려웠고 3번은 코드를 끄적이지도 못해서 4번은 대체 얼마나 어려울지 가늠이 안됐다. 처음에는 <code class=\"language-text\">그래프</code> 문제인가??? 했는데 그래프는 무슨 그냥 단순 <code class=\"language-text\">구현</code> 문제였다. 체감 난이도는 백준 기준 <code class=\"language-text\">실버1 ~ 골드5</code> 정도였다.</p>\n<h2 id=\"-시험-결과\" style=\"position:relative;\"><a href=\"#-%EC%8B%9C%ED%97%98-%EA%B2%B0%EA%B3%BC\" aria-label=\" 시험 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍀 시험 결과</h2>\n<p>1번부터 4번까지 난이도 별로 문제가 배치되는 것 같지는 않기 때문에 무조건 시험이 시작되면 전반적으로 한번 훑고 쉬운 문제부터 접근하는 것이 어쩌면 당연하지만 추천한다. 실제로 이번 시험에서도 4번이 3번보다 쉬웠기 때문에 순차적으로 접근했다면 나중에 조금 후회했을 것 같다.</p>\n<p>12월 방학부터 약 3개월 가량 거의 백준만 풀었는데 그래도 개강 때 이런 성과라도 얻을 수 있어서 다행이다.</p>\n<p><img src=\"/ae4d1dcf06dbcc7141f5ba4f66c7bb85/image.jpeg\" alt=\"\"></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EF%B8%8F-pccp%EB%9E%80\">✏️ PCCP란?</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%A7%80%EC%9B%90-%EB%8F%99%EA%B8%B0\">👊 지원 동기</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%8B%9C%ED%97%98-%ED%99%98%EA%B2%BD\">🧑🏻‍💻 시험 환경</a></p>\n</li>\n<li>\n<p><a href=\"#-%EB%AC%B8%EC%A0%9C-%ED%9B%84%EA%B8%B0\">📄 문제 후기</a></p>\n<ul>\n<li><a href=\"#1%EB%B2%88-\">1번 ✅</a></li>\n<li><a href=\"#2%EB%B2%88-\">2번 ✅</a></li>\n<li><a href=\"#3%EB%B2%88-\">3번 ❌</a></li>\n<li><a href=\"#4%EB%B2%88-\">4번 ✅</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%8B%9C%ED%97%98-%EA%B2%B0%EA%B3%BC\">🍀 시험 결과</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 10, 2024","title":"코딩전문역량인증 PCCP 후기","categories":"회고","author":"재오","emoji":"📑"},"fields":{"slug":"/PCCP/"}},"prev":{"id":"670f45ec-4317-5d9d-8b81-ba43c3ebd85a","html":"<h2 id=\"-lis최장-증가-부분-수열\" style=\"position:relative;\"><a href=\"#-lis%EC%B5%9C%EC%9E%A5-%EC%A6%9D%EA%B0%80-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4\" aria-label=\" lis최장 증가 부분 수열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 LIS(최장 증가 부분 수열)</h2>\n<p>원소의 개수가 N개인 배열이 있다고 가정을 해보자. 배열의 원소 index는 변하지 않는 조건 하에 각 원소가 이전 원소보다 큰, 그 길이가 최대인 부분 수열을 <code class=\"language-text\">최장 증가 부분 수열</code>이라고 한다.</p>\n<h2 id=\"-이분탐색을-활용한-lis\" style=\"position:relative;\"><a href=\"#-%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-lis\" aria-label=\" 이분탐색을 활용한 lis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 이분탐색을 활용한 LIS</h2>\n<p>LIS 알고리즘을 구현하는 방법은 여러가지가 있지만 <code class=\"language-text\">이분탐색</code>을 이용한 방법은 효율적으로 구현할 수 있다. 일반적으로 이분탐색은 O(logN)에 탐색이 가능하기 때문에 LIS를 구현하는 문제에서는 O(NlogN)의 시간복잡도로 문제를 해결할 수 있다.</p>\n<p><img src=\"/ef8c6e95a2437dc2027780c0dc2dfcf2/1.png\" alt=\"\"></p>\n<p>위 이분탐색을 이용하여 LIS를 구하는 코드는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> inputNumber <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token constant\">LIS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// LIS 배열에서 인덱스 값보다 작은 값이 나왔을 경우에 실행될 함수</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">BinarySearch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> mid<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mid <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LIS</span><span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">)</span> left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> right <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">LIS</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> inputNumber<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// LIS 비교 인덱스</span>\n<span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 원래 배열 비교 인덱스</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LIS</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> inputNumber<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">LIS</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> inputNumber<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token function\">BinarySearch</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> inputNumber<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token constant\">LIS</span><span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> inputNumber<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"-실제-lis에-해당하는-배열-구하기\" style=\"position:relative;\"><a href=\"#-%EC%8B%A4%EC%A0%9C-lis%EC%97%90-%ED%95%B4%EB%8B%B9%ED%95%98%EB%8A%94-%EB%B0%B0%EC%97%B4-%EA%B5%AC%ED%95%98%EA%B8%B0\" aria-label=\" 실제 lis에 해당하는 배열 구하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 실제 LIS에 해당하는 배열 구하기</h2>\n<p>위 방법은 LIS의 길이를 구하는 방법이다. 따라서 실제 해당 길이에 포함되는 배열을 구하고 싶을 때는 추가적인 작업이 필요하다.</p>\n<p><img src=\"/bf577b34e864bb8fa1aad630eeb697ae/2.png\" alt=\"\"></p>\n<p><img src=\"/83648b63fe5abb9cc9a5cc2339b50788/3.png\" alt=\"\"></p>\n<ol>\n<li>\n<p>위에서 살펴봤던 LIS를 구하는 과정처럼 LIS 배열과 Record라는 배열을 생성한 후 LIS 배열에는 기존 과정을, Record라는 배열에는 LIS 몇번 째 배열에 값이 입력되는지 index 값을 순차적으로 적어준다.</p>\n</li>\n<li>\n<p>이후에 한번 순회하게 된다면 Record 배열의 최대값으로부터 거꾸로 순회하며 해당 인덱스에 해당하는 원본 수열의 값을 임시 LIS에 넣어주고 최대값을 1씩 줄여나간다.</p>\n</li>\n<li>\n<p>임시 LIS를 오름차순으로 정렬한다.</p>\n</li>\n<li>\n<p>해당 배열이 실제 LIS에 해당하는 결과값이다.</p>\n</li>\n</ol>\n<h2 id=\"-reference\" style=\"position:relative;\"><a href=\"#-reference\" aria-label=\" reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📑 Reference</h2>\n<p><a href=\"https://yhwan.tistory.com/21\">그림 출처 : 방앗간 개발자</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-lis%EC%B5%9C%EC%9E%A5-%EC%A6%9D%EA%B0%80-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4\">🎯 LIS(최장 증가 부분 수열)</a></li>\n<li><a href=\"#-%EC%9D%B4%EB%B6%84%ED%83%90%EC%83%89%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-lis\">🎯 이분탐색을 활용한 LIS</a></li>\n<li><a href=\"#-%EC%8B%A4%EC%A0%9C-lis%EC%97%90-%ED%95%B4%EB%8B%B9%ED%95%98%EB%8A%94-%EB%B0%B0%EC%97%B4-%EA%B5%AC%ED%95%98%EA%B8%B0\">🎯 실제 LIS에 해당하는 배열 구하기</a></li>\n<li><a href=\"#-reference\">📑 Reference</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 28, 2024","title":"알고리즘 준비하기 - LIS","categories":"알고리즘","author":"재오","emoji":"📚"},"fields":{"slug":"/LIS/"}},"site":{"siteMetadata":{"siteUrl":"https://www.jaeochoiii.com","comments":{"utterances":{"repo":"jaeochoii/jaeochoii.github.io"}}}}},"pageContext":{"slug":"/Tip/","nextSlug":"/PCCP/","prevSlug":"/LIS/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}