{"componentChunkName":"component---src-templates-blog-template-js","path":"/Footer/","result":{"data":{"cur":{"id":"7d213c6b-e14b-51fd-9027-ea3f1e1d2be2","html":"<p><em><strong>이 글은 Footer 컴포넌트를 상위 컴포넌트로 설정하지 않았을 때 적용이 가능합니다.</strong></em></p>\n<p>그렇다… 페이지를 다 구현하고 세부기능을 구현하기 위한 나의 잘못된 생각으로 이 사단이 발생하였다. 이 글은 내가 겪었던 시행착오까지 다 담긴 글이니 부디 이 글을 읽으시는 분들은 나와 같은 오류로 인하여 먼 길 돌아가지 않았으면 한다.</p>\n<p><strong>Header와 Footer은 항상 상위 컴포넌트로 설정해둔다…메모…</strong></p>\n<p><img src=\"/c84c943c038ee240c80095d515db705d/1.png\" alt=\"\">\n---|---|\n위와 같이 아이콘1을 누르면 페이지1이, 아이콘2를 누르면 페이지2가 나오게끔 하려고 한다. 단, 눌렀을 때 해당 아이콘의 상태만 변경되고 나머지 아이콘은 기본값을 유지해야 한다. 지난 포스트 <a href=\"https://velog.io/@jaeochoiii/React-%EC%95%84%EC%9D%B4%EC%BD%98-%ED%81%B4%EB%A6%AD%ED%96%88%EC%9D%84-%EB%95%8C-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\">아이콘 클릭했을 때 변경하기</a>를 조금 응용하면 된다.</p>\n<h2 id=\"색-입히기까지는성공하지만\" style=\"position:relative;\"><a href=\"#%EC%83%89-%EC%9E%85%ED%9E%88%EA%B8%B0%EA%B9%8C%EC%A7%80%EB%8A%94%EC%84%B1%EA%B3%B5%ED%95%98%EC%A7%80%EB%A7%8C\" aria-label=\"색 입히기까지는성공하지만 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>색 입히기까지는…성공…하지만</h2>\n<p>그대로 코드를 쓰기에는 useState의 값이 <code class=\"language-text\">true/false</code>로 들어가기 때문에 모든 아이콘의 색이 변경되거나 유지된다. 따라서 <code class=\"language-text\">useState</code>를 하나 더 만들어줘서 아이콘마다 set상태를 변경해서 해당 상태일 때마다 색상이 바뀌게끔 하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>click<span class=\"token punctuation\">,</span> setClick<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>ButtonWrapper\n        onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setClick</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/MainPage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>click <span class=\"token operator\">===</span> <span class=\"token string\">\"home\"</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>HiOutlineHome style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#D8CB93\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">\"30px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>HiOutlineHome style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">\"30px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ButtonWrapper<span class=\"token operator\">></span></code></pre></div>\n<p>위 코드는 5개의 버튼 중에서 홈버튼 코드만 가져온 것이다. 이 코드의 문제점이 있다. 기본값이 “home”이기 때문에 렌더링 된 후 첫 페이지에서는 홈버튼의 색이 바뀌어 있다. 하지만 메뉴페이지나 검색페이지와 같이 다른 페이지로 이동하기 위한 아이콘을 클릭하면 다시 홈페이지에 색깔이 들어와있다. 그 상태에서 한번더 이동한 페이지의 아이콘을 누르면 그때쯤에야 색이 다시 변경된다.</p>\n<h2 id=\"원인이-무엇일까\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EC%9D%B8%EC%9D%B4-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C\" aria-label=\"원인이 무엇일까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원인이 무엇일까…</h2>\n<p>정말 1시간이 넘도록 이 문제의 원인이 무엇인지 몰랐다. 위 설명에서처럼 다른 페이지로 렌더링이 되었을 때 홈버튼이 눌려있는 것을 확인하고 눈치를 챘어야 했는데 더블클릭이 되어야만 바뀐다는 생각이 머리를 지배해버렸다… 결국 내 주변 프론트엔드 분야 전문가인 동아리 동생 <code class=\"language-text\">손을 번쩍 든 무지</code> 에게 물어봐서 이 문제를 파악했다…\n<img src=\"/1b16aafd630565f2746bb19a035bac1e/2.png\" alt=\"\">\n하지만 라우터 연결로 도배가 되어버린 App.js파일을 다 갈아 엎기에는 너무 큰 고생을 해야할 뿐더러 이미 페이지가 많이 구현되었기 때문에 다른 방법을 찾아보기로 했다.</p>\n<h2 id=\"해결법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0%EB%B2%95\" aria-label=\"해결법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결법</h2>\n<p><strong><code class=\"language-text\">useState</code> 기본값에 있는 string을 props로 받으면 되지 않을까 하는 생각이 들었다.</strong></p>\n<h3 id=\"footerjsx\" style=\"position:relative;\"><a href=\"#footerjsx\" aria-label=\"footerjsx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Footer.jsx</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Footer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> navigate <span class=\"token operator\">=</span> <span class=\"token function\">useNavigate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>click<span class=\"token punctuation\">,</span> setClick<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>FootWrapper<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ButtonWrapper\n        name<span class=\"token operator\">=</span><span class=\"token string\">\"home\"</span>\n        onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setClick</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/MainPage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>click <span class=\"token operator\">===</span> <span class=\"token string\">\"home\"</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>HiOutlineHome style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#D8CB93\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">\"30px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>HiOutlineHome style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token string\">\"30px\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ButtonWrapper<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"menupagejsx\" style=\"position:relative;\"><a href=\"#menupagejsx\" aria-label=\"menupagejsx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MenuPage.jsx</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MainPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Header <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Body <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Footer name<span class=\"token operator\">=</span><span class=\"token string\">\"home\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MainPage<span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 Footer.jsx 파일에서는 <code class=\"language-text\">props</code>를 주고 각 아이콘마다 name속성을 만들어서 해당 속성값을 props로 받게끔 전달하였다. 아래와 같이 성공한 모습을 볼 수 있다.\n<img src=\"/09901ff63e5eb83d3a381a78b34d5310/3.gif\" alt=\"\"></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%83%89-%EC%9E%85%ED%9E%88%EA%B8%B0%EA%B9%8C%EC%A7%80%EB%8A%94%EC%84%B1%EA%B3%B5%ED%95%98%EC%A7%80%EB%A7%8C\">색 입히기까지는…성공…하지만</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9B%90%EC%9D%B8%EC%9D%B4-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C\">원인이 무엇일까…</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%95%B4%EA%B2%B0%EB%B2%95\">해결법</a></p>\n<ul>\n<li><a href=\"#footerjsx\">Footer.jsx</a></li>\n<li><a href=\"#menupagejsx\">MenuPage.jsx</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"이 글은 Footer 컴포넌트를 상위 컴포넌트로 설정하지 않았을 때 적용이 가능합니다. 그렇다… 페이지를 다 구현하고 세부기능을 구현하기 위한 나의 잘못된 생각으로 이 사단이 발생하였다. 이 글은 내가 겪었던 시행착오까지 다 담긴 글이니 부디 이 글을 읽으시는 분들은 나와 같은 오류로 인하여 먼 길 돌아가지 않았으면 한다. Header와 Footer은 항상 상위 컴포넌트로 설정해둔다…메모… \n---|---|\n위와 같이 아이콘1을 누르면 페이지1이, 아이콘2를 누르면 페이지2가 나오게끔 하려고 한다. 단, 눌렀을 때 해당 아이콘의 상태만 변경되고 나머지 아이콘은 기본값을 유지해야 한다. 지난 포스트 아이콘 클릭했을 때 변경하기를 조금 응용하면 된다. 색 입히기까지는…성공…하지만 그대로 코드를 쓰기에는 useState의 값이 로 들어가기 때문에 모든 아이콘의 색이 변경되거나 유지된다. 따라서 를 하나 더 만들어줘서 아이콘마다 set상태를 변경해서 해당 상태일 때마다 색상이 바뀌게끔 하…","frontmatter":{"date":"April 07, 2024","title":"React - Footer 아이콘 클릭시 색 변경하기","categories":"리액트","author":"재오","emoji":"🧬"},"fields":{"slug":"/Footer/"}},"next":{"id":"6bc77413-fb46-597b-92f8-7bb1cb9c7883","html":"<h2 id=\"️-hsat-자격인증-평가란\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-hsat-%EC%9E%90%EA%B2%A9%EC%9D%B8%EC%A6%9D-%ED%8F%89%EA%B0%80%EB%9E%80\" aria-label=\"️ hsat 자격인증 평가란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️ HSAT 자격인증 평가란?</h2>\n<p><code class=\"language-text\">HSAT</code>은 현대자동차그룹 <code class=\"language-text\">Softeer</code>에서 주최하는 코딩테스트 역량검증 평가이다. 보통 1년에 3회정도 평가에 참여할 수 있으며, 문제는 총 2문제, 시험시간은 3시간이다. 2문제 모두를 맞혔을 경우에만 현대자동차 그룹 회사인 현대자동차, 기아, 현대오토에버, 현대모비스, 현대차증권의 코딩테스트를 면제해주는 혜택을 2년간 누릴 수 있다.</p>\n<p><img src=\"/0edf62d3d2ae0de8a6636d92cf56dfa8/1.png\" alt=\"\"></p>\n<p>지원 언어는 생각보다 많으니 위 사진을 참고하면 된다. PCCP와는 다르게 응시료도 받지 않으니 마음 편하게 지원해도 된다.</p>\n<h2 id=\"-준비-과정\" style=\"position:relative;\"><a href=\"#-%EC%A4%80%EB%B9%84-%EA%B3%BC%EC%A0%95\" aria-label=\" 준비 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐣 준비 과정</h2>\n<p>👉 소프티어 연습문제 풀어보기 : <a href=\"https://softeer.ai/practice?q=%EC%A0%95%EA%B8%B0&#x26;page=1\">Softeer 연습문제</a></p>\n<p><img src=\"/b7e32aaf2bece1c4df38c5f6b8b6328a/2.png\" alt=\"\"></p>\n<p>위 사이트에 들어가면 지금까지 응시했던 HSAT 정기평가 기출문제를 풀어볼 수 있다. 꼭 위 문제를 풀어보길 바란다. 보통 코딩테스트가 프로그래머스에서 이루어지나 HSAT은 Softeer 자체 IDE에서 이뤄지기 때문에 시각적으로(?) 익숙함이 필요하다.\n특히 자바스크립트 기준으로는 프로그래머스에서는 사용하지 않는 <code class=\"language-text\">fs</code> 모듈 입력을 Softeer에서는 백준처럼 다 적어놔야 하기 때문에 직접 적어보는 연습도 중요하다.</p>\n<p>9회 시험을 앞두고 2주정도 기출문제를 풀어봤지만 정말 난이도가 어렵다. 나름 백준 골드 3까지의 문제는 많이 풀어봤는데 소프티어 문제는 체감상 골드1 이상은 되는 것 같다. 스스로의 힘으로 해결한 문제도 얼마 안됐기 때문에 유튜브에 있는 해설영상에 많이 의존했다.</p>\n<p>확실한건 소프티어는 <code class=\"language-text\">DFS</code>와 <code class=\"language-text\">BFS</code>, <code class=\"language-text\">백트래킹</code>을 진짜 좋아한다.</p>\n<h2 id=\"-문제-후기\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%ED%9B%84%EA%B8%B0\" aria-label=\" 문제 후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📄 문제 후기</h2>\n<p>기출문제가 너무 어려워서 별로 기대하지 않고 시험을 응시했다. 그래서인지 긴장감도 없었다. 3시간 시험이기 때문에 여유있게 보고 나오려고 했다.</p>\n<p>시험 보안때문에 구체적으로 문제를 설명할 수 없지만 확실한건 내가 여태 본 코딩테스트 중에서 제일 어려웠다. 그래도 기출문제를 풀면서 면역이 생긴 탓에 당황하지 않은건 좋았던 것 같다.</p>\n<p>1번은 역시 백트래킹. 딱 문제만 봤을 때 스택을 쓰라는 건가 싶었는데, 도저히 스택으로 구현할 자신이 없었다. 그냥 백트래킹으로 구현했고, 테스트 케이스는 한방에 통과했다. 하지만 뭔가 찜찜했기 때문에 2번 풀고 다시 와야지 생각했다. (결과적으로 검토를 못했…흑😭) 1번은 40분 소요됐다.</p>\n<p>2번은 누가봐도 BFS 문제였다. BFS 문제는 연습을 많이 했기 때문에 자신 있었는데 너무 어려워서 놀랐다. 진짜 10분은 멍때린 것 같다. 이걸 어떻게 풀지…?라는 생각이 많이 들었고, 백준에서는 벽 부수고 이동하기인가 그 문제와 유사했지만 훨씬 조건도 까다롭고 어려웠다. 2시간 내내 코드를 썼다 지웠다 하면서 거의 반쯤 포기한 상태였다. 그래도 로직상 답에는 근접한 것 같았는데 30분 넘게 테스트케이스 하나만 통과했다. 대체 뭐가 문제지 싶어서 코드를 다 뜯어봐도 테케가 통과 안되는게 신기했다. 그리고 정확히 종료 5분전에 초기 세팅한 부분에서 잘못됨을 깨닫고 급하게 수정하고 종료 1분전에 테케가 모두 통과됐음을 확인했다. 하지만 이것도 찜찜하다. (뭔가 시간초과 날 것 같은 느낌적인 느낌…ㅎ)</p>\n<p>결론적으로 1,2번 모두 테케는 통과했지만 찜찜하게 끝났다.</p>\n<h2 id=\"-느낀점\" style=\"position:relative;\"><a href=\"#-%EB%8A%90%EB%82%80%EC%A0%90\" aria-label=\" 느낀점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🫠 느낀점</h2>\n<p><img src=\"/f29385a4f6c75ffe9dcaf4b52d628939/3.jpg\" alt=\"\"></p>\n<p>최종 결과는 4월 9일에 나온다. 물론 기대는 안하지만 그래도 테케는 다 통과해서 마음은 편하게 기다릴 수 있을 것 같다. 코테 공부를 시작한지 100일 정도 됐는데 아직 백트래킹 문제만 나오면 쫄린다. 이 부분에 대해 꾸준히 연습을 많이 해야한다고 생각이 든다. 백트래킹 마스터가 되고 소프티어 10회 다시 도전!</p>\n<p>끗!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EF%B8%8F-hsat-%EC%9E%90%EA%B2%A9%EC%9D%B8%EC%A6%9D-%ED%8F%89%EA%B0%80%EB%9E%80\">✏️ HSAT 자격인증 평가란?</a></li>\n<li><a href=\"#-%EC%A4%80%EB%B9%84-%EA%B3%BC%EC%A0%95\">🐣 준비 과정</a></li>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C-%ED%9B%84%EA%B8%B0\">📄 문제 후기</a></li>\n<li><a href=\"#-%EB%8A%90%EB%82%80%EC%A0%90\">🫠 느낀점</a></li>\n</ul>\n</div>","frontmatter":{"date":"April 04, 2024","title":"HSAT 자격인증 평가 9회 후기","categories":"회고","author":"재오","emoji":"📑"},"fields":{"slug":"/HSAT/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://www.jaeochoiii.com","comments":{"utterances":{"repo":"jaeochoii/jaeochoii.github.io"}}}}},"pageContext":{"slug":"/Footer/","nextSlug":"/HSAT/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}