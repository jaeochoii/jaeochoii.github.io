{"version":3,"file":"component---src-pages-index-js-9f9e5cde431881b573eb.js","mappings":"2OAiCA,MAvBA,SAAiBA,GAAY,IAATC,EAAID,EAAJC,KACZC,EAAQD,EAAKE,kBAAkBC,MAAMC,KAAI,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAI,OAAO,IAAIC,EAAAA,EAAKD,EAAK,IAC3EE,EAA6BR,EAAKS,KAAKC,aAA/BC,EAAMH,EAANG,OAAQC,EAAQJ,EAARI,SACVC,EAAU,CAAI,OAAKC,QAAAC,EAAAA,EAAAA,GCbQ,SAACd,GAClC,IAAMe,EAAc,IAAIC,IAExB,OADAhB,EAAMiB,SAAQ,SAAAnB,GAAa,OAAAA,EAAVc,WAA4BK,SAAQ,SAACC,GAAQ,OAAKH,EAAYI,IAAID,EAAS,GAAC,KACtFJ,EAAAA,EAAAA,GAAIC,GAAaK,MAAK,SAACC,EAAGC,GAC/B,MAAU,aAAND,GAA0B,EACpB,aAANC,EAAyB,EACtB,CACT,GACF,CDKgCC,CAAoBvB,KAC5CwB,EAAmBZ,EAAWa,WAAU,SAACP,GAAQ,MAAkB,aAAbA,CAAuB,IACnFQ,GAAgCC,EAAAA,EAAAA,WAA+B,IAAtBH,EAA0B,EAAIA,GAAhEI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACtBI,GAAmBC,EAAAA,EAAAA,cAAY,SAACC,EAAGC,GAAK,OAAKJ,EAAYI,EAAM,GAAE,IAEvE,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,aACXH,EAAAA,cAACI,EAAAA,EAAG,CAAC5B,OAAQA,EAAQC,SAAUA,IAC/BuB,EAAAA,cAACK,EAAAA,EAAQ,CACPvC,MAAOA,EACPwC,SAAUV,EACVW,KAAM7B,EACNgB,SAAUA,EACVc,gBAAc,IAItB,C","sources":["webpack://zoomkoding.com/./src/pages/index.js","webpack://zoomkoding.com/./src/utils/helpers.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Bio from '../components/bio';\nimport Post from '../models/post';\n\nimport { getUniqueCategories } from '../utils/helpers';\nimport PostTabs from '../components/post-tabs';\n\nfunction HomePage({ data }) {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\n  const { author, language } = data.site.siteMetadata;\n  const categories = ['All', ...getUniqueCategories(posts)];\n  const featuredTabIndex = categories.findIndex((category) => category === 'featured');\n  const [tabIndex, setTabIndex] = useState(featuredTabIndex === -1 ? 0 : featuredTabIndex);\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\n\n  return (\n    <Layout>\n      <Seo title=\"재오의 개발로그\" />\n      <Bio author={author} language={language} />\n      <PostTabs\n        posts={posts}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        tabIndex={tabIndex}\n        showMoreButton\n      />\n    </Layout>\n  );\n}\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500, truncate: true)\n          frontmatter {\n            categories\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        language\n        author {\n          name\n          bio {\n            role\n            description\n            thumbnail\n          }\n          social {\n            github\n            linkedIn\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n","export const getUniqueCategories = (posts) => {\n  const categorySet = new Set();\n  posts.forEach(({ categories }) => categories.forEach((category) => categorySet.add(category)));\n  return [...categorySet].sort((a, b) => {\n    if (a === 'featured') return -1;\n    if (b === 'featured') return 1;\n    return 0;\n  });\n};\n"],"names":["_ref","data","posts","allMarkdownRemark","edges","map","_ref2","node","Post","_data$site$siteMetada","site","siteMetadata","author","language","categories","concat","_toConsumableArray","categorySet","Set","forEach","category","add","sort","a","b","getUniqueCategories","featuredTabIndex","findIndex","_useState","useState","tabIndex","setTabIndex","onTabIndexChange","useCallback","e","value","React","Layout","Seo","title","Bio","PostTabs","onChange","tabs","showMoreButton"],"sourceRoot":""}